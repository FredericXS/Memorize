//
//  EmojiMemoryGame.swift
//  Memorize
//
//  Created by Frederic Áü≥Ëã± on 31/12/23.
//

import SwiftUI

class EmojiMemoryGame: ObservableObject {
    typealias Card = MemoryGame<String>.Card
        
    struct Theme: Identifiable {
        var name: String
        var color: Color
        var content: [String]
        let id = UUID()
    }
    
    let themes: [Theme] = [
        Theme(name: "Halloween", color: .orange, content: ["üëª", "üéÉ", "üï∑Ô∏è", "üòà", "üíÄ", "üï∏Ô∏è", "üßô", "üôÄ", "üëπ", "üò±", "‚ò†Ô∏è", "üç≠"]),
        Theme(name: "Vehicles", color: .red, content: ["üöó", "üöô", "üöë", "üöö", "üöú", "üöì", "‚úàÔ∏è", "üö≤", "üõµ", "üöÇ", "üèçÔ∏è", "üö¢", "üõ≥Ô∏è", "üõª", "üöÅ"]),
        Theme(name: "Sports", color: .purple, content: ["‚öΩÔ∏è", "üèÄ", "üèê", "ü•ä", "‚öæÔ∏è", "üèà", "ü•ã", "üéæ", "üèë", "üèì", "üéø", "üè∏", "ü§∫", "üèÑ‚Äç‚ôÇÔ∏è"]),
        Theme(name: "Animals", color: .blue, content: ["üê∂", "üêí", "üê±", "üê≠", "üêπ", "üê∞", "ü¶ä", "üêª", "üêî", "ü¶Ü", "üê¥", "ü¶Ö", "üêÇ", "üêÑ", "üêù", "üê∏", "üêØ", "ü¶Å", "üê∑", "üê∫", "üê¨", "ü¶í", "üêò", "ü¶ò", "üêä", "ü¶à"]),
        Theme(name: "Fruits", color: .green, content: ["üçé", "üçê", "üçä", "üçã", "üçå", "üçâ", "üçá", "üçì", "üçà", "üçí", "üçë", "ü•≠", "üçç", "ü´ê"])
    ]
    
    private static func createMemoryGame(_ theme: Theme) -> MemoryGame<String> {
        return MemoryGame(numberOfPairsOfCards: theme.content.count) { pairIndex in
            if theme.content.indices.contains(pairIndex) {
                return theme.content[pairIndex]
            }
            
            return "‚ÅâÔ∏è"
        }
    }
        
    @Published private var model = createMemoryGame(Theme(name: "Default", color: .blue, content: ["a", "b"])) // Default theme
    
    var cards: [Card] {
        model.cards
    }
    
    var score: Int {
        model.score
    }
    
    var allCardsMatched: Bool {
        model.cards.allSatisfy { $0.isMatched }
    }
            
    // MARK: - Intents
    
    func shuffle() {
        model.shuffle()
    }
    
    func choose(_ card: Card) {
        model.choose(card)
    }

    func initialReveal() {
        model.cardsFaceUpToggle()
        
        DispatchQueue.main.asyncAfter(deadline: .now() + 2) {
            withAnimation {
                self.model.cardsFaceUpToggle()
                self.model.startCards()
            }
        }
    }
    
    func newGame(_ theme: Theme) {
        model = EmojiMemoryGame.createMemoryGame(theme)
    }
}
